!function(t,r){"use strict";"undefined"!=typeof module?module.exports=r(t):t.define?t.define("$mask",r):t.angular?t.angular.module("jengine.mask",[]).constant("$mask",r()):t.$storage||(t.$mask=r())}(this,function(t){"use strict";function r(t,r){for(var n=[],e=t.length>r.length?t.length:r.length,a=0;e>a;a++)a<t.length&&(t[a]instanceof Array?n=n.concat(t[a]):n.push(t[a])),a<r.length&&(r[a]instanceof Array?n=n.concat(r[a]):n.push(r[a]));return n}function n(t){return"("+m[t]+")"}function e(t,r){return t+n(r)+(t?"?":"")}function a(t,r){return t+m[r]}function i(){return null}function u(t){return t.split("").map(i)}function o(t){return t.split("").map(n)}function s(t){return" "===t?"\\s":g.map[t]?"\\"+t:t}function c(t){return t.split("").map(s)}function h(t,r){return r+(t?"("+t+")?":"")}function f(t,r,n,e){return void 0===r||r.length>1||!e[n+1]?t:t+r}function p(t){var n=t.split(/\{[^\}]+\}/),i=t.match(/\{([^\}]+)\}/g);if(!i)throw new Error("wrong mask");i=i.map(function(t){return t.substr(1,t.length-2)}),this.reMatch=new RegExp("^"+i.join("").split("").reduce(e,"")+"$"),this.reValid=new RegExp("^"+i.join("").split("").reduce(a,"")+"$"),this.reParse=new RegExp("^"+r(n.map(c),i.map(o)).join("")+"$"),this.reParsePartial=new RegExp("^"+r(n.map(c),i.map(o)).reduceRight(h,"")+"$"),this.maskArray=r(n,i.map(u))}function l(t){return new p(t)}var m={9:"\\d",a:"[a-z]",A:"[A-Z]","Ã¢":"[a-zA-Z]"},g=["(",")","[","]","{","}"];return g.map={},g.forEach(function(t){g.map[t]=!0}),p.prototype.format=function(t){var r=this.match(t);if(!r)throw new Error("value mismatch");for(var n="",e=0,a=0,i=this.maskArray.length;i>a;a++)if(null===this.maskArray[a]){if(!t.charAt(e))return n;n+=t.charAt(e++)}else n+=this.maskArray[a];return n},p.prototype.match=function(t){var r=t.match(this.reMatch);return r&&r.slice(1)},p.prototype.valid=function(t){return this.reValid.test(t)},p.prototype.parseFull=function(t){var r=t.match(this.reParse);if(!r)throw new Error("value mismatch");return r.slice(1).join("")},p.prototype.parse=function(t){var r=t.match(this.reParsePartial);if(!r)throw new Error("value mismatch");return r.reduce(f,"")},l.MaskParser=p,l});